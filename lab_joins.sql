USE sakila;

SELECT CATEGORY.NAME, COUNT(FILM_CATEGORY.FILM_ID) AS COUNT
FROM CATEGORY
LEFT JOIN FILM_CATEGORY
ON CATEGORY.CATEGORY_ID = FILM_CATEGORY.CATEGORY_ID
GROUP BY CATEGORY.NAME;

SELECT STORE.STORE_ID, CITY.CITY, COUNTRY.COUNTRY
FROM STORE
LEFT JOIN ADDRESS
ON STORE.ADDRESS_ID = ADDRESS.ADDRESS_ID
LEFT JOIN CITY
ON ADDRESS.CITY_ID = CITY.CITY_ID
LEFT JOIN COUNTRY
ON CITY.COUNTRY_ID = COUNTRY.COUNTRY_ID;

SELECT STAFF.STORE_ID, SUM(PAYMENT.AMOUNT) AS TOTAL_USD
FROM PAYMENT
LEFT JOIN STAFF
ON PAYMENT.STAFF_ID = STAFF.STAFF_ID
GROUP BY STAFF.STORE_ID;

SELECT CATEGORY.NAME, ROUND(AVG(FILM.LENGTH), 2) AS PROMEDIO
FROM CATEGORY
LEFT JOIN FILM_CATEGORY
ON CATEGORY.CATEGORY_ID = FILM_CATEGORY.CATEGORY_ID
LEFT JOIN FILM
ON FILM_CATEGORY.FILM_ID = FILM.FILM_ID
GROUP BY CATEGORY.NAME;

SELECT CATEGORY.NAME, ROUND(AVG(FILM.LENGTH), 2) AS PROMEDIO
FROM CATEGORY
LEFT JOIN FILM_CATEGORY
ON CATEGORY.CATEGORY_ID = FILM_CATEGORY.CATEGORY_ID
LEFT JOIN FILM
ON FILM_CATEGORY.FILM_ID = FILM.FILM_ID
GROUP BY CATEGORY.NAME
ORDER BY PROMEDIO DESC;

SELECT FILM.TITLE, COUNT(RENTAL.RENTAL_ID) AS TOTAL
FROM FILM
LEFT JOIN INVENTORY
ON FILM.FILM_ID = INVENTORY.FILM_ID
LEFT JOIN RENTAL
ON INVENTORY.INVENTORY_ID = RENTAL.INVENTORY_ID
GROUP BY FILM.TITLE
ORDER BY TOTAL DESC
LIMIT 10;

SELECT FILM.TITLE, STORE_ID
FROM FILM
JOIN INVENTORY
ON FILM.FILM_ID = INVENTORY.FILM_ID
JOIN RENTAL
ON INVENTORY.INVENTORY_ID = RENTAL.INVENTORY_ID
WHERE FILM.TITLE = 'ACademy Dinosaur';

SELECT DISTINCT
	FILM.TITLE,
	CASE
		WHEN INVENTORY.INVENTORY_ID IS NULL THEN 'NOT AVAILABLE'
		ELSE 'AVAILABLE'
	END AS DISPONIBILITY
FROM FILM
LEFT JOIN INVENTORY
ON FILM.FILM_ID = INVENTORY.FILM_ID;
